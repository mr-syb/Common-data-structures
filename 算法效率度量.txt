算法效率的度量主要分为"事后测试"和"事前估计"。
1. 事后测试：主要通过在函数中插入时间函数，来测定执行某一规定功能所需要的时间。
2. 事前估计：算法复杂性的度量。
	1> 空间复杂度：当问题的规模以某种单位从1增加值n时，解决这个问题的算法在执行时所占用的空间从也从1
	增加至S(n),称此算法的空间复杂度为S(n)。
	2> 时间复杂度：当问题的规模以某种单位从1增加值n时，解决这个问题的算法在执行时所花费的时间从也从1
	增加至T(n),称此算法的空间复杂度为T(n)。
		A.程序步：在语法或者语义上面有意义的一段指令序列，而且这段指令的执行时间与实例特性无关。
		B.大O渐进表示。
			a.加法规则：当两个并列的程序段的时间代价分别为T1(n) = O(f(n))和T2(m) = O(g(m))时，那么两
			个程序段连在一起后整个程序段的时间复杂度为T(n,m) = T1(n)+T2(m) = O(max{f(n),g(m)})
			b.乘法规则：当两个嵌套的程序段的时间代价分别为T1(n) = O(f(n))和T2(m) = O(g(m))时，那么两
			个程序段连在一起后整个程序段的时间复杂度为T(n,m) = T1(n)*T2(m) = O(f(n)*g(m)) 
			### 在大O渐进表示法中任何非0正常数都属于同一数量级O(1).
			### 在用大O渐进表示空间复杂度时，计算的仅仅是解决问题所需要发辅助存储空间，而不是程序指令，
			常数指针等所占用存储空间或者输入数据所占用的存储空间。